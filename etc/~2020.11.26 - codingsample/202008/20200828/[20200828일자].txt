1번문제
growingPlant
성장속도와 축소속도, 목표치를 인자로 받아, 0에서 부터 시작하는 식물이 목표치에 도달하는데 걸리는 일 수를 반환

나의 아이디어:
while을 이용해서 성장속도를 먼저 더하고, 목표치에 일치하면 count반환,
아니면 성장속도를 더하고, 축소속도를 빼는식으로 반복.

특이한 식:
(목표치 - 축소속도) / (성장속도 - 축소속도)
해당 수치를 정수화 시키고, ceil(올림) 연산 해주면 결과값이 나오는듯.


2번문제
knapsackLight
무게와 값어치, 들수있는 무게를 비교하여 최대 값어치를 출력하는 함수.
여러가지 경우의 수를 잘 고려해야함.

? : 구문을 이용하여 한줄에 표현.
먼저 둘다 들 수 있으면 둘다 들며,
아니라면 각 무게 하나씩 비교, 둘 다 들 수 있다면 둘 중 값어치가 높은것을 출력하는 형태.



3번문제
longestDigitsPrefix
문제를 좀 잘못 만든거같음. 그냥 넘김




4번문제
digitDegree
입력으로 주어진 숫자를 각 단위마다 +해서 1의자리가 될때까지 몇번을 해야하는지 출력하는 함수

나의 아이디어:
그냥 %10한 값을 계속 더해주면 됨.



5번문제
bishopAndPawn
비숍위치와 폰의 위치가 있을때, 비숍이 한번만 움직여서 폰을 잡을 수 있는지 여부

abs(폰x-비숍x) == abs(폰y-비숍y) 면 되지않나?
됨.


Eruption_of_Light - 1번문제
isBeautifulString
알파벳 순서대로 크기가 클수록 개수가 적거나 같아지게 되면 true, 아니면 false반환

check를 통해 문자열의 각 문자 개수를 세고
문자열을 검사하면서, 0부터 size-2까지 돌면서
i>i+1이면 false, 아니면 true를 반환



2번문제
findEmailDomain
입력된 이메일주소의 도메인부분을 출력하는 함수.

나의 아이디어:
보통 앞부분이 더 기니까 뒤에서부터 읽는게 좋을듯.
size-1부터 0보다 큰동안 --해가면서 @가 나올때까지 돌리고 해당값을 swit으로 설정
for문으로 swit+1부터 size-1까지의 값을 해당 문자열의 0부터 새기고, 끝에 '\0'을 넣고 출력.