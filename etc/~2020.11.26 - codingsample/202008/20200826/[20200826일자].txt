HARD***
4번문제
stringsRearrangement
각 문자열 배열의 순서를 바꿔서, 순서대로 문자열이
단 하나의 문자만 다른 문자열이 될 수 있는지를 출력

나의 아이디어:
재귀적인 알고리즘을 사용할 예정
>> 전용 함수를 별도로 재차 만들어줌.
해당 값을 지났는지를 확인하는 bool swit 배열을 false로 초기화
현재 돌아야 하는 위치를 int로 받음.

=>
이번 문제 좀 어려워서 시간 좀 걸렸음.

이번 문제를 풀기 위해서는 여러가지 체크를 해야했기에 재귀방법을 이용함.
1) 먼저 주어진 문자열 배열에서 어떤 순서로 돌렸을때, 한 글자씩 바뀌는지 그 순서를 확인할 필요가 있었음.
2) => 반복문으로 각 문자열을 하나씩 point로 잡아, 한글자씩 바뀔 수 있는 경로가 있다면 true, 없으면 false를 반환하는 함수를 만듦.
2-1) 함수의 원리
	1단계 : swit 배열이 모두 true인지를 확인함( 모두 true가 되었을경우, 경로가 완성된 것이므로 true를 반환 )
	2단계 : swit 배열 중 false인 값이 있다면, (아직 돌지않은 경로가있다면) 해당 값이 err==1인지 체크함(한글자만 다른지 체크)
	3단계 : 한글자만 다르다면, 해당 값을 다시 point로 잡은 재귀함수로 들어감
	3-1단계 : 해당 재귀함수가 false를 반환한다면(즉, 경로가 중간에 불가능해진다면) 다시 반복문을 돌며, 경로가 true이면 true반환
	4단계 : 반복문을 모두 돌았지만, 경로를 찾지 못했다면 경로를 찾지못함. false를 반환하는데, 이때 swit[point]를 false로 설정해줌.

타 예시 체크는 C,자바,파이썬 한개씩만 확인함.


1] C언어
이건 경로를 탐색하는 방식이 아닌, 실제로 문자열들을 순서에 맞게 이동시키기 위한 방식으로 구현되어있음.
3가지 내부메소드로 구현함.

void swapPtrs(char ** a, char ** b);
포인터를 스왑해주기위한 메소드로, 문자열배열 a를 문자열배열 b와 서로 내용을 바꿔줌.

bool arrTest(arr_string inputArray);
배열 전체를 돌면서, 이전 문자열과 다음 문자열이 단 한 문자를 제외하고 일치하지 않으면 false를 반환함.

bool perms(arr_string inputArray, int s, int e);
메인 재귀함수.
퀵정렬과 비슷한 방식으로 각 문자열 배열의 서로 위치를 교환해가며,
모든 교환할 수 있는 경우의 수를 돌리고, 그 돌린 값을 arrTest를 통해 통과한다면 true를 반환하도록 되어있음.
효율이 좀 안좋을듯..? ㅎㅎ;;


2] 자바
void findSequence(String[] a, String prev, boolean[] used, int n);
메인 재귀함수.
bool 배열인 used와 이전 String값을 받으며, 현재 위치를 확인하는 n을 인자로 받는 함수.
1) n이 끝까지 돌았다면 출력값인 success를 true로 하고, 해당값을 출력함.
2) 아니라면 i를 0부터 문자열 배열 길이만큼 반복함
	2-1) used에서 현재 위치가 이미 지나간 것인지 체크하고, prev가 null이거나, 이전값과 현재 문자열이 딱 한문자만 다른지 체크.
		맞다면 used[i]를 true로 하고, prev에 현재 문자열, 현재위치는 n+1으로 재귀,
		재귀종료후에는 현재 지난값을 false로 바꿔줌
==> 마찬가지로 경로찾기식의 서칭

boolean differByOne(String a, String b);
a와 b가 서로 딱 한 문자만 다른지 체크하는 함수


3] 파이썬
from itertools import permutations사용함.
permutations()함수 => 튜블들을 루핑하는데 쓰임
https://python.flowdas.com/library/itertools.html

def diff(w1, w2)
해당 함수는 인자 문자열 2개가 한 문자만 다른지를 출력
sum([a[0] != a[1] for a in zip(w1,w2)]) == 1

메인함수:
inputArray를 permutations으로 루핑.
각 문자열이 한가지만 다른값이 나오는지를 체크하며, 해당값이 전체배열만큼 되었을때
True를 반환하는 방식.











